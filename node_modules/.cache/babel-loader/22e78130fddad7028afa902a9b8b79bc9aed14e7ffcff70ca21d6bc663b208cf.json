{"ast":null,"code":"var _jsxFileName = \"/home/ntu_cosmo/pokemon-mini-game/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { makeDeck, makeShuffledDeck } from \"./utils.js\";\nimport p_types from \"./images/pokemon_type.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    // Always call super with props in constructor to initialise parent class\n    super(props);\n    this.rN = 0;\n    // Code to determine who won, Player 1 or 2\n    this.determineWinner = (atk, def) => {\n      let i = atk[0].index;\n      let j = def[0].index;\n      let res = this.typeMatchUpChart[i][j];\n      switch (res) {\n        case 4:\n          this.updateScore(1);\n          break;\n        case 2:\n          this.updateScore(2);\n          break;\n        case 1:\n          this.updateScore(3);\n          break;\n        case 0:\n          this.updateScore(4);\n          break;\n        default:\n          return;\n      }\n    };\n    this.updateScore = n => {\n      const {\n        scoreboard\n      } = this.state;\n      //const {currWinner} = this.state;\n      const {\n        p1Atk\n      } = this.state;\n      if (p1Atk === true) {\n        if (n === 1) {\n          scoreboard[0] += 2;\n          this.setState({\n            currWinner: \"Player1\"\n          });\n        } else if (n === 2) {\n          this.setState({\n            currWinner: \"No player\"\n          });\n        } else if (n === 3) {\n          scoreboard[1] += 1;\n          this.setState({\n            currWinner: \"Player2\"\n          });\n        } else if (n === 4) {\n          scoreboard[1] += 2;\n          this.setState({\n            currWinner: \"Player2\"\n          });\n        }\n      } else {\n        if (n === 1) {\n          scoreboard[1] += 2;\n          this.setState({\n            currWinner: \"Player2\"\n          });\n        } else if (n === 2) {\n          this.setState({\n            currWinner: \"No player\"\n          });\n        } else if (n === 3) {\n          scoreboard[0] += 1;\n          this.setState({\n            currWinner: \"Player1\"\n          });\n        } else if (n === 4) {\n          scoreboard[0] += 2;\n          this.setState({\n            currWinner: \"Player1\"\n          });\n        }\n      }\n      this.setState({\n        scoreboard\n      });\n      this.changeP1Atk();\n    };\n    this.dealType = () => {\n      const {\n        p1Atk\n      } = this.state;\n      console.log(`${p1Atk}+2`);\n      this.rN++;\n      //Pops a specific card from deck\n      if (this.state.cardDeck !== []) {\n        const newP1Card = this.state.cardDeck.splice(18, 1);\n        const newP2Card = [this.state.cardDeck2.pop()];\n        this.setState({\n          p1Card: newP1Card,\n          p2Card: newP2Card,\n          roundNum: this.rN\n        }, () => {\n          // Call determineWinner after the state has been updated\n          p1Atk ? this.determineWinner(newP1Card, newP2Card) : this.determineWinner(newP2Card, newP1Card);\n        });\n        console.log(`${p1Atk}+3`);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The deck is out of cards. Please click 'restart to restart the game.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this);\n      }\n    };\n    this.dealCards = () => {\n      const {\n        p1Atk\n      } = this.state;\n      this.rN++;\n      // this.state.cardDeck.pop() modifies this.state.cardDeck array\n      if (this.state.cardDeck !== []) {\n        const newP1Card = [this.state.cardDeck.pop()];\n        const newP2Card = [this.state.cardDeck2.pop()];\n        p1Atk ? this.setState({\n          currAtk: newP1Card,\n          currDef: newP2Card,\n          roundNum: this.rN\n        }, () => {\n          // Call determineWinner after the state has been updated\n\n          this.determineWinner(newP1Card, newP2Card);\n        }) : this.setState({\n          currAtk: newP2Card,\n          currDef: newP1Card,\n          roundNum: this.rN\n        }, () => {\n          // Call determineWinner after the state has been updated\n\n          this.determineWinner(newP2Card, newP1Card);\n        });\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"The deck is out of cards. Please click 'restart to restart the game.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }, this);\n      }\n    };\n    this.startGame = () => {\n      this.setState({\n        gameStart: true\n      });\n    };\n    this.restartGame = () => {\n      this.rN = 0;\n      this.setState({\n        cardDeck: makeShuffledDeck(),\n        cardDeck2: makeShuffledDeck(),\n        currAtk: [],\n        currDef: [],\n        currWinner: null,\n        scoreboard: [0, 0],\n        p1Atk: false,\n        roundNum: 0,\n        gameStart: false\n      });\n    };\n    this.changeP1Atk = () => {\n      const {\n        p1Atk\n      } = this.state;\n      p1Atk ? this.setState({\n        p1Atk: false\n      }) : this.setState({\n        p1Atk: true\n      });\n    };\n    this.typeMatchUpChart = [\n    /*typeless, Normal\",\"Fighting\",\"Psychic\",\"Dark\",\"Ghost\",\"Bug\",\"Dragon\",\n     \"Flying\",\"Fairy\",\"Rock\",\"Ground\",\"Steel\",\"Poison\",\"Grass\",\"Water\",\"Ice\",\n     \"Electric\",\"Fire\"*/\n    [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2], [2, 4, 2, 1, 4, 0, 1, 2, 1, 1, 4, 2, 4, 1, 2, 2, 4, 2, 2], [2, 2, 4, 1, 0, 2, 2, 2, 2, 2, 2, 2, 1, 4, 2, 2, 2, 2, 2], [2, 2, 1, 4, 1, 4, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 0, 2, 4, 1, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 1, 4, 4, 1, 2, 2, 1, 1, 2, 2, 1, 1, 4, 2, 2, 2, 1], [2, 2, 2, 2, 2, 2, 2, 4, 2, 0, 2, 2, 1, 2, 2, 2, 2, 2, 2], [2, 2, 4, 2, 2, 2, 4, 2, 2, 2, 1, 2, 1, 2, 4, 2, 2, 1, 2], [2, 2, 4, 2, 4, 2, 2, 4, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1], [2, 2, 1, 2, 2, 2, 4, 2, 4, 2, 2, 1, 1, 2, 2, 2, 4, 2, 4], [2, 2, 2, 2, 2, 2, 1, 2, 0, 2, 4, 2, 4, 4, 1, 2, 2, 4, 4], [2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 2, 1, 2, 2, 1, 4, 1, 1], [2, 2, 2, 2, 2, 1, 2, 2, 2, 4, 1, 1, 0, 1, 4, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 4, 4, 1, 1, 1, 4, 2, 2, 1], [2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 4, 4, 2, 2, 1, 1, 2, 2, 4], [2, 2, 2, 2, 2, 2, 2, 4, 4, 2, 2, 4, 1, 2, 4, 1, 1, 2, 1], [2, 2, 2, 2, 2, 2, 2, 1, 4, 2, 2, 0, 2, 2, 1, 4, 2, 1, 2], [2, 2, 2, 2, 2, 2, 4, 1, 2, 2, 1, 2, 4, 2, 4, 1, 4, 2, 1]];\n    this.state = {\n      //Start game\n      gameStart: false,\n      // Set default value of card deck to new shuffled deck\n      cardDeck: makeDeck(),\n      cardDeck2: makeShuffledDeck(),\n      // currCards holds the cards from the current round\n      p1Card: [],\n      p2Card: [],\n      // State to track who won from the current round\n      currWinner: null,\n      // State to track the score of each player\n      scoreboard: [0, 0],\n      //Switch attack and defend\n      p1Atk: false,\n      roundNum: 0\n    };\n  }\n  render() {\n    //Code to check the winner: if cardRank not same, return higher cardRank, if same, check for suite and return higher suite\n    const {\n      gameStart,\n      cardDeck,\n      currWinner,\n      p1Card,\n      p2Card,\n      scoreboard,\n      p1Atk,\n      roundNum\n    } = this.state;\n    const setAtkDefEle = () => {\n      let currAtkElems;\n      let currDefElems;\n      p1Atk ? (currAtkElems = p1Card.map(_ref => {\n        let {\n          type\n        } = _ref;\n        return (\n          // Give each list element a unique key\n          type ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Player1 used \", type, \" type attack\"]\n          }, `${type}1`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Player1 used Typeless attack\"\n          }, `typeless1`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)\n        );\n      }), currDefElems = p2Card.map(_ref2 => {\n        let {\n          type\n        } = _ref2;\n        return (\n          // Give each list element a unique key\n          type ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"against Player2's \", type, \" type\"]\n          }, `${type}2`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"against Player2's Typeless\"\n          }, `typeless2`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this)\n        );\n      })) : (currAtkElems = this.state.p2Card.map(_ref3 => {\n        let {\n          type\n        } = _ref3;\n        return (\n          // Give each list element a unique key\n          type ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Player2 used \", type, \" type attack\"]\n          }, `${type}1`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Player2 used Typeless attack\"\n          }, `typeless1`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this)\n        );\n      }), currDefElems = this.state.p1Card.map(_ref4 => {\n        let {\n          type\n        } = _ref4;\n        return (\n          // Give each list element a unique key\n          type ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"against Player1's \", type, \" type\"]\n          }, `${type}2`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"against Player1's Typeless\"\n          }, `typeless2`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this)\n        );\n      }));\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [currAtkElems, currDefElems]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 18\n      }, this);\n    };\n    const currImage = () => {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: p_types,\n        width: \"500px\",\n        height: \"300px\",\n        alt: \"pokemon types\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this);\n    };\n    const displayOutput = () => {\n      if (currWinner) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [currWinner, \" has won round \", roundNum]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Player 1 has \", scoreboard[0], \" points.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Player 2 has \", scoreboard[1], \" points.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select a type for the round.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this);\n      }\n    };\n    const gameBegin = () => {\n      if (gameStart) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: displayOutput()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 16\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Press 'Start' to start the game.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 16\n        }, this);\n      }\n    };\n    const gameWinner = scoreboard[0] > scoreboard[1] ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Player 1 has won this game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 9\n    }, this) : scoreboard[0] < scoreboard[1] ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Player 2 has won this game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Both players are tied\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [currImage(), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Pokemon Type match-up Card game\\uD83D\\uDE80\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), console.log(`${p1Atk}+0`), setAtkDefEle(), console.log(`${p1Atk}+1`), gameBegin(), cardDeck.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [gameWinner, /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Press Restart to restart the game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this) : gameStart ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.dealCards,\n            children: \"Deal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.dealType,\n            children: \"Fire\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.dealType,\n            children: \"Electric\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.startGame,\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), cardDeck.length === 0 ? /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 36\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Reset the game:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.restartGame,\n          children: \"Restart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","makeDeck","makeShuffledDeck","p_types","jsxDEV","_jsxDEV","App","Component","constructor","props","rN","determineWinner","atk","def","i","index","j","res","typeMatchUpChart","updateScore","n","scoreboard","state","p1Atk","setState","currWinner","changeP1Atk","dealType","console","log","cardDeck","newP1Card","splice","newP2Card","cardDeck2","pop","p1Card","p2Card","roundNum","children","fileName","_jsxFileName","lineNumber","columnNumber","dealCards","currAtk","currDef","startGame","gameStart","restartGame","render","setAtkDefEle","currAtkElems","currDefElems","map","_ref","type","_ref2","_ref3","_ref4","currImage","src","width","height","alt","displayOutput","gameBegin","gameWinner","className","length","onClick"],"sources":["/home/ntu_cosmo/pokemon-mini-game/src/App.js"],"sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport { makeDeck, makeShuffledDeck } from \"./utils.js\";\nimport p_types from \"./images/pokemon_type.png\";\n\nclass App extends React.Component {\n  constructor(props) {\n    // Always call super with props in constructor to initialise parent class\n    super(props);\n    this.state = {\n      //Start game\n      gameStart: false,\n      // Set default value of card deck to new shuffled deck\n      cardDeck: makeDeck(),\n      cardDeck2: makeShuffledDeck(),\n      // currCards holds the cards from the current round\n      p1Card: [],\n      p2Card: [],\n\n      // State to track who won from the current round\n      currWinner: null,\n\n      // State to track the score of each player\n      scoreboard: [0, 0],\n      //Switch attack and defend\n      p1Atk: false,\n      roundNum: 0,\n    };\n  }\n  rN = 0;\n  // Code to determine who won, Player 1 or 2\n  determineWinner = (atk, def) => {\n    let i = atk[0].index;\n    let j = def[0].index;\n    let res = this.typeMatchUpChart[i][j];\n\n    switch (res) {\n      case 4:\n        this.updateScore(1);\n        break;\n      case 2:\n        this.updateScore(2);\n        break;\n      case 1:\n        this.updateScore(3);\n        break;\n      case 0:\n        this.updateScore(4);\n        break;\n      default:\n        return;\n    }\n  };\n\n  updateScore = (n) => {\n    const { scoreboard } = this.state;\n    //const {currWinner} = this.state;\n    const { p1Atk } = this.state;\n\n    if (p1Atk === true) {\n      if (n === 1) {\n        scoreboard[0] += 2;\n        this.setState({ currWinner: \"Player1\" });\n      } else if (n === 2) {\n        this.setState({ currWinner: \"No player\" });\n      } else if (n === 3) {\n        scoreboard[1] += 1;\n        this.setState({ currWinner: \"Player2\" });\n      } else if (n === 4) {\n        scoreboard[1] += 2;\n        this.setState({ currWinner: \"Player2\" });\n      }\n    } else {\n      if (n === 1) {\n        scoreboard[1] += 2;\n        this.setState({ currWinner: \"Player2\" });\n      } else if (n === 2) {\n        this.setState({ currWinner: \"No player\" });\n      } else if (n === 3) {\n        scoreboard[0] += 1;\n        this.setState({ currWinner: \"Player1\" });\n      } else if (n === 4) {\n        scoreboard[0] += 2;\n        this.setState({ currWinner: \"Player1\" });\n      }\n    }\n    this.setState({ scoreboard });\n    this.changeP1Atk();\n  };\n\n  dealType = () => {\n    const { p1Atk } = this.state;\n    console.log(`${p1Atk}+2`);\n    this.rN++;\n    //Pops a specific card from deck\n    if (this.state.cardDeck !== []) {\n      const newP1Card = this.state.cardDeck.splice(18, 1);\n      const newP2Card = [this.state.cardDeck2.pop()];\n\n      this.setState(\n        {\n          p1Card: newP1Card,\n          p2Card: newP2Card,\n          roundNum: this.rN,\n        },\n        () => {\n          // Call determineWinner after the state has been updated\n          p1Atk\n            ? this.determineWinner(newP1Card, newP2Card)\n            : this.determineWinner(newP2Card, newP1Card);\n        }\n      );\n\n      console.log(`${p1Atk}+3`);\n    } else {\n      return (\n        <p>\n          The deck is out of cards. Please click 'restart to restart the game.\n        </p>\n      );\n    }\n  };\n\n  dealCards = () => {\n    const { p1Atk } = this.state;\n    this.rN++;\n    // this.state.cardDeck.pop() modifies this.state.cardDeck array\n    if (this.state.cardDeck !== []) {\n      const newP1Card = [this.state.cardDeck.pop()];\n      const newP2Card = [this.state.cardDeck2.pop()];\n\n      p1Atk\n        ? this.setState(\n            {\n              currAtk: newP1Card,\n              currDef: newP2Card,\n              roundNum: this.rN,\n            },\n            () => {\n              // Call determineWinner after the state has been updated\n\n              this.determineWinner(newP1Card, newP2Card);\n            }\n          )\n        : this.setState(\n            {\n              currAtk: newP2Card,\n              currDef: newP1Card,\n              roundNum: this.rN,\n            },\n            () => {\n              // Call determineWinner after the state has been updated\n\n              this.determineWinner(newP2Card, newP1Card);\n            }\n          );\n    } else {\n      return (\n        <p>\n          The deck is out of cards. Please click 'restart to restart the game.\n        </p>\n      );\n    }\n  };\n  startGame = () => {\n    this.setState({ gameStart: true });\n  };\n  restartGame = () => {\n    this.rN = 0;\n    this.setState({\n      cardDeck: makeShuffledDeck(),\n      cardDeck2: makeShuffledDeck(),\n      currAtk: [],\n      currDef: [],\n      currWinner: null,\n      scoreboard: [0, 0],\n      p1Atk: false,\n      roundNum: 0,\n      gameStart: false,\n    });\n  };\n  changeP1Atk = () => {\n    const { p1Atk } = this.state;\n    p1Atk ? this.setState({ p1Atk: false }) : this.setState({ p1Atk: true });\n  };\n\n  typeMatchUpChart = [\n    /*typeless, Normal\",\"Fighting\",\"Psychic\",\"Dark\",\"Ghost\",\"Bug\",\"Dragon\",\n     \"Flying\",\"Fairy\",\"Rock\",\"Ground\",\"Steel\",\"Poison\",\"Grass\",\"Water\",\"Ice\",\n     \"Electric\",\"Fire\"*/\n    [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n    [2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2],\n    [2, 4, 2, 1, 4, 0, 1, 2, 1, 1, 4, 2, 4, 1, 2, 2, 4, 2, 2],\n    [2, 2, 4, 1, 0, 2, 2, 2, 2, 2, 2, 2, 1, 4, 2, 2, 2, 2, 2],\n    [2, 2, 1, 4, 1, 4, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n    [2, 0, 2, 4, 1, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n    [2, 2, 1, 4, 4, 1, 2, 2, 1, 1, 2, 2, 1, 1, 4, 2, 2, 2, 1],\n    [2, 2, 2, 2, 2, 2, 2, 4, 2, 0, 2, 2, 1, 2, 2, 2, 2, 2, 2],\n    [2, 2, 4, 2, 2, 2, 4, 2, 2, 2, 1, 2, 1, 2, 4, 2, 2, 1, 2],\n    [2, 2, 4, 2, 4, 2, 2, 4, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1],\n    [2, 2, 1, 2, 2, 2, 4, 2, 4, 2, 2, 1, 1, 2, 2, 2, 4, 2, 4],\n    [2, 2, 2, 2, 2, 2, 1, 2, 0, 2, 4, 2, 4, 4, 1, 2, 2, 4, 4],\n    [2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 2, 1, 2, 2, 1, 4, 1, 1],\n    [2, 2, 2, 2, 2, 1, 2, 2, 2, 4, 1, 1, 0, 1, 4, 2, 2, 2, 2],\n    [2, 2, 2, 2, 2, 2, 1, 1, 1, 2, 4, 4, 1, 1, 1, 4, 2, 2, 1],\n    [2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 4, 4, 2, 2, 1, 1, 2, 2, 4],\n    [2, 2, 2, 2, 2, 2, 2, 4, 4, 2, 2, 4, 1, 2, 4, 1, 1, 2, 1],\n    [2, 2, 2, 2, 2, 2, 2, 1, 4, 2, 2, 0, 2, 2, 1, 4, 2, 1, 2],\n    [2, 2, 2, 2, 2, 2, 4, 1, 2, 2, 1, 2, 4, 2, 4, 1, 4, 2, 1],\n  ];\n\n  render() {\n    //Code to check the winner: if cardRank not same, return higher cardRank, if same, check for suite and return higher suite\n    const {\n      gameStart,\n      cardDeck,\n      currWinner,\n      p1Card,\n      p2Card,\n      scoreboard,\n      p1Atk,\n      roundNum,\n    } = this.state;\n    \n    const setAtkDefEle = () => {\n      let currAtkElems;\n    let currDefElems;\n      p1Atk\n        ? ((currAtkElems = p1Card.map(({ type }) =>\n            // Give each list element a unique key\n            type ? (\n              <div key={`${type}1`}>Player1 used {type} type attack</div>\n            ) : (\n              <div key={`typeless1`}>Player1 used Typeless attack</div>\n            )\n          )),\n          (currDefElems = p2Card.map(({ type }) =>\n            // Give each list element a unique key\n            type ? (\n              <div key={`${type}2`}>against Player2's {type} type</div>\n            ) : (\n              <div key={`typeless2`}>against Player2's Typeless</div>\n            )\n          )))\n        : ((currAtkElems = this.state.p2Card.map(({ type }) =>\n            // Give each list element a unique key\n            type ? (\n              <div key={`${type}1`}>Player2 used {type} type attack</div>\n            ) : (\n              <div key={`typeless1`}>Player2 used Typeless attack</div>\n            )\n          )),\n          (currDefElems = this.state.p1Card.map(({ type }) =>\n            // Give each list element a unique key\n            type ? (\n              <div key={`${type}2`}>against Player1's {type} type</div>\n            ) : (\n              <div key={`typeless2`}>against Player1's Typeless</div>\n            )\n          )));\n          return <div>{currAtkElems}{currDefElems}</div>\n    };\n\n    const currImage = () => {\n      return (\n        <img src={p_types} width=\"500px\" height=\"300px\" alt=\"pokemon types\" />\n      );\n    };\n\n    const displayOutput = () => {\n      if (currWinner) {\n        return (\n          <div>\n            <h3>\n              {currWinner} has won round {roundNum}\n            </h3>\n            <p>Player 1 has {scoreboard[0]} points.</p>\n            <p>Player 2 has {scoreboard[1]} points.</p>\n          </div>\n        );\n      } else {\n        return (\n          <div>\n            <p>Select a type for the round.</p>\n          </div>\n        );\n      }\n    };\n    const gameBegin = () => {\n      if (gameStart) {\n        return <div>{displayOutput()}</div>;\n      } else {\n        return <div>Press 'Start' to start the game.</div>;\n      }\n    };\n    const gameWinner =\n      scoreboard[0] > scoreboard[1] ? (\n        <h3>Player 1 has won this game</h3>\n      ) : scoreboard[0] < scoreboard[1] ? (\n        <h3>Player 2 has won this game</h3>\n      ) : (\n        <h3>Both players are tied</h3>\n      );\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          {currImage()}\n\n          <h3>Pokemon Type match-up Card game🚀</h3>\n          {console.log(`${p1Atk}+0`)}\n          {setAtkDefEle()}\n\n          {console.log(`${p1Atk}+1`)}\n          {gameBegin()}\n\n          {cardDeck.length === 0 ? (\n            <div>\n              {gameWinner}\n              <p>Press Restart to restart the game</p>\n            </div>\n          ) : gameStart ? (\n            <div>\n              <button onClick={this.dealCards}>Deal</button>\n              <button onClick={this.dealType}>Fire</button>\n              <button onClick={this.dealType}>Electric</button>\n            </div>\n          ) : (\n            <button onClick={this.startGame}>Start</button>\n          )}\n          <br />\n          <br />\n          {cardDeck.length === 0 ? <br /> : <p>Reset the game:</p>}\n\n          <button onClick={this.restartGame}>Restart</button>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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AC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACzD,CAAC,CAAC,EAAE,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"},"metadata":{},"sourceType":"module","externalDependencies":[]}