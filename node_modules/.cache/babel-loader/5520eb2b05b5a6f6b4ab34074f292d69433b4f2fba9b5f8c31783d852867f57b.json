{"ast":null,"code":"var _jsxFileName = \"/home/ntu_cosmo/pokemon-mini-game/src/keyboard/Keyboard.js\";\nimport React from \"react\";\nimport \"./Keyboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Keyboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      buttons: [\"Typeless\", \"Normal\", \"Fighting\", \"Psychic\", \"Dark\", \"Ghost\", \"Bug\", \"Dragon\", \"Flying\", \"Fairy\", \"Rock\", \"Ground\", \"Steel\", \"Poison\", \"Grass\", \"Water\", \"Ice\", \"Electric\", \"Fire\"],\n      clickedKeys: []\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n  handleKeyDown(event) {\n    // Convert the key code to a character\n    const key = String.fromCharCode(event.keyCode).toLowerCase();\n\n    // Check if the character is in the list of valid keys\n    const {\n      buttons\n    } = this.state;\n    if (buttons.includes(key)) {\n      // Find the corresponding button and trigger a click on it\n      const button = this[key];\n      // Creates an object with a value being the char to mimic the button element\n      this.handleClick({\n        target: {\n          value: button.value\n        }\n      });\n    }\n  }\n\n  // If the button is clicked, and has not been clicked before, the value of the button is stored into the clickedKey array\n  handleClick(key) {\n    const {\n      onClick\n    } = this.props;\n    const clickedKey = key.target.value;\n    if (!this.state.clickedKeys.includes(clickedKey)) {\n      onClick(key.target.value);\n      this.setState(prevState => ({\n        clickedKeys: [...prevState.clickedKeys, key.target.value]\n      }));\n    }\n  }\n  componentDidUpdate() {\n    //console.log(this.state.clickedKeys);\n  }\n  render() {\n    const {\n      buttons,\n      clickedKeys\n    } = this.state;\n    const firstRow = buttons.slice(0, 7);\n    const secondRow = buttons.slice(7, 14);\n    const thirdRow = buttons.slice(14);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: firstRow.map(key => /*#__PURE__*/_jsxDEV(\"button\", {\n          value: key,\n          onClick: this.handleClick,\n          disabled: clickedKeys.includes(key),\n          ref: button => {\n            this[key] = button;\n          },\n          children: key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: secondRow.map(key => /*#__PURE__*/_jsxDEV(\"button\", {\n          value: key,\n          onClick: this.handleClick,\n          disabled: clickedKeys.includes(key),\n          ref: button => {\n            this[key] = button;\n          },\n          children: key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: thirdRow.map(key => /*#__PURE__*/_jsxDEV(\"button\", {\n          value: key,\n          onClick: this.handleClick,\n          disabled: clickedKeys.includes(key),\n          ref: button => {\n            this[key] = button;\n          },\n          children: key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Keyboard;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Keyboard","Component","constructor","props","state","buttons","clickedKeys","handleClick","bind","handleKeyDown","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","event","key","String","fromCharCode","keyCode","toLowerCase","includes","button","target","value","onClick","clickedKey","setState","prevState","componentDidUpdate","render","firstRow","slice","secondRow","thirdRow","className","children","map","disabled","ref","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/ntu_cosmo/pokemon-mini-game/src/keyboard/Keyboard.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./Keyboard.css\";\r\n\r\n\r\nclass Keyboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      buttons: [\r\n        \"Typeless\",\r\n        \"Normal\",\r\n        \"Fighting\",\r\n        \"Psychic\",\r\n        \"Dark\",\r\n        \"Ghost\",\r\n        \"Bug\",\r\n        \"Dragon\",\r\n        \"Flying\",\r\n        \"Fairy\",\r\n        \"Rock\",\r\n        \"Ground\",\r\n        \"Steel\",\r\n        \"Poison\",\r\n        \"Grass\",\r\n        \"Water\",\r\n        \"Ice\",\r\n        \"Electric\",\r\n        \"Fire\",\r\n      ],\r\n      clickedKeys: [],\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleKeyDown = this.handleKeyDown.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown(event) {\r\n    // Convert the key code to a character\r\n    const key = String.fromCharCode(event.keyCode).toLowerCase();\r\n\r\n    // Check if the character is in the list of valid keys\r\n    const { buttons } = this.state;\r\n    if (buttons.includes(key)) {\r\n      // Find the corresponding button and trigger a click on it\r\n      const button = this[key];\r\n      // Creates an object with a value being the char to mimic the button element\r\n      this.handleClick({ target: { value: button.value } });\r\n    }\r\n  }\r\n\r\n  // If the button is clicked, and has not been clicked before, the value of the button is stored into the clickedKey array\r\n  handleClick(key) {\r\n    const { onClick } = this.props;\r\n    const clickedKey = key.target.value;\r\n    if (!this.state.clickedKeys.includes(clickedKey)) {\r\n      onClick(key.target.value);\r\n      this.setState((prevState) => ({\r\n        clickedKeys: [...prevState.clickedKeys, key.target.value],\r\n      }));\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    //console.log(this.state.clickedKeys);\r\n  }\r\n\r\n  render() {\r\n    const { buttons, clickedKeys } = this.state;\r\n    const firstRow = buttons.slice(0, 7);\r\n    const secondRow = buttons.slice(7, 14);\r\n    const thirdRow = buttons.slice(14);\r\n\r\n    return (\r\n      <div className=\"keyboard\">\r\n        <div className=\"row\">\r\n          {firstRow.map((key) => (\r\n            <button\r\n              value={key}\r\n              onClick={this.handleClick}\r\n              disabled={clickedKeys.includes(key)}\r\n              ref={(button) => {\r\n                this[key] = button;\r\n              }}\r\n            >\r\n              {key}\r\n            </button>\r\n          ))}\r\n        </div>\r\n        <div className=\"row\">\r\n          {secondRow.map((key) => (\r\n            <button\r\n              value={key}\r\n              onClick={this.handleClick}\r\n              disabled={clickedKeys.includes(key)}\r\n              ref={(button) => {\r\n                this[key] = button;\r\n              }}\r\n            >\r\n              {key}\r\n            </button>\r\n          ))}\r\n        </div>\r\n        <div className=\"row\">\r\n          {thirdRow.map((key) => (\r\n            <button\r\n              value={key}\r\n              onClick={this.handleClick}\r\n              disabled={clickedKeys.includes(key)}\r\n              ref={(button) => {\r\n                this[key] = button;\r\n              }}\r\n            >\r\n              {key}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Keyboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}