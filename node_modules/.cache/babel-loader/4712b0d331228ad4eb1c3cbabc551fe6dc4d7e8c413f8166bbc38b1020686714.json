{"ast":null,"code":"var _jsxFileName = \"/home/ntu_cosmo/pokemon-mini-game/src/displayType.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass DisplayType extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    const {\n      cardDeck\n    } = this.props;\n    console.log(cardDeck.length);\n    let picArray = [];\n    let typeLess = require(`./images/Typeless.png`);\n    picArray.push(typeLess);\n    for (let i = 1; i < cardDeck.length; i++) {\n      let cType = cardDeck[i].type;\n      let myImage = require(`./images/${cType}.png`);\n      picArray.push(myImage);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: cardDeck.map(_ref => {\n        let {\n          index,\n          type\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: picArray[index],\n          width: \"50\",\n          alt: type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 48\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n}\nexport default DisplayType;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DisplayType","Component","constructor","props","state","render","cardDeck","console","log","length","picArray","typeLess","require","push","i","cType","type","myImage","children","map","_ref","index","src","width","alt","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/ntu_cosmo/pokemon-mini-game/src/displayType.js"],"sourcesContent":["import React from \"react\";\n\nclass DisplayType extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render(){\n    const {cardDeck} = this.props;\n    console.log(cardDeck.length);\n    let picArray=[];\n    let typeLess = require(`./images/Typeless.png`);\n    picArray.push(typeLess);\n    for (let i=1;i<cardDeck.length;i++){\n      let cType = cardDeck[i].type;\n      let myImage = require(`./images/${cType}.png`);\n      picArray.push(myImage);\n    }\n   \n    return(<div>{cardDeck.map(({index, type})=><img src={picArray[index]} width=\"50\" alt={type} />)}</div>)\n  }\n\n  \n}\n\nexport default DisplayType;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,SAASH,KAAK,CAACI,SAAS,CAAC;EACxCC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC;EACjB;EAEAC,MAAMA,CAAA,EAAE;IACN,MAAM;MAACC;IAAQ,CAAC,GAAG,IAAI,CAACH,KAAK;IAC7BI,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,MAAM,CAAC;IAC5B,IAAIC,QAAQ,GAAC,EAAE;IACf,IAAIC,QAAQ,GAAGC,OAAO,CAAE,uBAAsB,CAAC;IAC/CF,QAAQ,CAACG,IAAI,CAACF,QAAQ,CAAC;IACvB,KAAK,IAAIG,CAAC,GAAC,CAAC,EAACA,CAAC,GAACR,QAAQ,CAACG,MAAM,EAACK,CAAC,EAAE,EAAC;MACjC,IAAIC,KAAK,GAAGT,QAAQ,CAACQ,CAAC,CAAC,CAACE,IAAI;MAC5B,IAAIC,OAAO,GAAGL,OAAO,CAAE,YAAWG,KAAM,MAAK,CAAC;MAC9CL,QAAQ,CAACG,IAAI,CAACI,OAAO,CAAC;IACxB;IAEA,oBAAOlB,OAAA;MAAAmB,QAAA,EAAMZ,QAAQ,CAACa,GAAG,CAACC,IAAA;QAAA,IAAC;UAACC,KAAK;UAAEL;QAAI,CAAC,GAAAI,IAAA;QAAA,oBAAGrB,OAAA;UAAKuB,GAAG,EAAEZ,QAAQ,CAACW,KAAK,CAAE;UAACE,KAAK,EAAC,IAAI;UAACC,GAAG,EAAER;QAAK;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EACxG;AAGF;AAEA,eAAe5B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}